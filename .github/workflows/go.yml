# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Golangci-lint
      uses: golangci/golangci-lint-action@v7.0.0

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the docker image
        run: docker build . --file Dockerfile --tag tantieme
      - name: Login to registry
        run:  docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.PAT_TOKEN }}
      - name: Push the docker image
        run: |
          docker tag tantieme ghcr.io/${{ github.repository_owner }}/tantieme:latest
          docker push ghcr.io/${{ github.repository_owner }}/tantieme:latest
  rollout:
    name: rollout
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - uses: actions/checkout@v4
      - name: ssh into the vps to kubectl rollout restart
        run: sshpass -p "${{ secrets.VPS_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_SSH_USER }}@${{ secrets.VPS_SSH_IP }} -p ${{ secrets.VPS_SSH_PORT }} 'sudo kubectl rollout restart deployment tantieme-app'
